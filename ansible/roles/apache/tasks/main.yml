##########################################################
#                     Install Apache                     #
##########################################################

- name: Set version for this playbook
  ansible.builtin.set_fact:
    ROLE_VERSION: '1.1.0'

- name: Display version
  ansible.builtin.debug:
    msg:
    - "{{role_name}} version: {{ ROLE_VERSION }}"

- name: APACHE - Add the OS specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"

- name: APACHE - Install Apache
  ansible.builtin.yum:
    state: latest
    pkg:
      - httpd
  when:
    - ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

- name: APACHE - Install mod_ssl
  ansible.builtin.yum:
    state: latest
    pkg:
      - mod_ssl
  when:
    - ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
    - HTTP_PROTOCOL == "https"

- name: APACHE - Install Apache
  ansible.builtin.apt:
    state: latest
    pkg:
      - apache2
  when:
    - ansible_distribution == 'Debian'

- name: APACHE - Enable and disable apache modules
  community.general.apache2_module:
    state: '{{ item.state }}'
    name: '{{ item.name }}'
  with_items:
    - { name: 'proxy', state: 'present' }
    - { name: 'proxy_http', state: 'present' }
    - { name: 'proxy_wstunnel', state: 'present' }
    - { name: 'proxy_fcgi', state: 'present' }
    - { name: 'mpm_prefork', state: 'absent' }
    - { name: 'mpm_event', state: 'present' }
    - { name: 'rewrite', state: 'present' }
    - { name: 'ssl', state: 'present', when: '{{ HTTP_PROTOCOL == "https" }}' }
  notify:
    - APACHE - Restart apache
  when:
    - ansible_distribution == "Debian"

- name: APACHE - Copy SSL certificates
  ansible.builtin.copy:
    content: "{{ lookup('ansible.builtin.file', '{{ inventory_dir }}/{{ SSL_PEM_CHAIN_FILENAME }}') }}"
    dest: '/etc/ssl/certs/{{ SSL_PEM_CHAIN_FILENAME }}'
    mode: '0644'
  notify:
    - APACHE - Restart apache
  when:
    - HTTP_PROTOCOL == "https"

- name: APACHE - Configure apache for SSL
  ansible.builtin.replace:
    dest: '{{ APACHE_SSL_CONF_FILE }}'
    regexp: '{{ item.regexp }}'
    replace: '{{ item.replace }}'
    backup: true
  with_items:
    - { regexp: '^\s*SSLCertificateFile .*', replace: 'SSLCertificateFile /etc/ssl/certs/{{ SSL_PEM_CHAIN_FILENAME }}'}
    - { regexp: '^\s*SSLCertificateKeyFile .*', replace: 'SSLCertificateKeyFile /etc/ssl/certs/{{ SSL_PEM_CHAIN_FILENAME }}'}
    - { regexp: '^\s*SSLCertificateChainFile .*', replace: 'SSLCertificateChainFile /etc/ssl/certs/{{ SSL_PEM_CHAIN_FILENAME }}'}
  notify:
    - APACHE - Restart apache
  when:
    - HTTP_PROTOCOL == "https"

- name: APACHE - Enable SSL in apache
  ansible.builtin.command: a2ensite default-ssl
  notify:
    - APACHE - Restart apache
  when:
    - HTTP_PROTOCOL == "https"
    - ansible_distribution == "Debian"

- name: APACHE - Ensure apache is running
  ansible.builtin.systemd:
    name: '{{ APACHE_DAEMON }}'
    state: started
    enabled: yes
    masked: no
