##########################################################
#                  Join Maxscale cluster                 #
##########################################################

- name: Set version for this playbook
  ansible.builtin.set_fact:
    ROLE_VERSION: '1.1.0'

- name: Display version
  ansible.builtin.debug:
    msg:
    - "{{role_name}} version: {{ ROLE_VERSION }}"

- name: MAXSCALE_CLUSTER - Add the OS specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"

- name: MAXSCALE_CLUSTER - Enable bin logs for replication
  community.general.ini_file:
    path: '{{ MARIADB_CONF_PATH }}/{{ SERVER_CONF_FILE }}'
    section: mysqld
    option: '{{ item.option }}'
    value: '{{ item.value }}'
    backup: yes
  with_items:
    - { option: 'server-id', value: '{{ MARIADB_SERVER_INDEX }}' }
    - { option: 'log_bin', value: '/var/log/mysql/mysql-bin.log' }
    - { option: 'expire_logs_days', value: '10' }
    - { option: 'max_binlog_size', value: '100M' }
  notify:
    - MAXSCALE_CLUSTER - Restart mariadb

- name: MAXSCALE_CLUSTER - Create maxscale database user
  community.mysql.mysql_user:
    login_user: '{{ DBADMINUSER }}'
    login_password: '{{ DBADMINPASSWD }}'
    login_port: '{{ MARIADB_SERVER_PORT }}'
    name: '{{ MAXSCALE_USER }}'
    password: '{{ MAXSCALE_USER_PASSWORD }}'
    host: '%'
    state: present
    priv:
      'mysql.user': 'SELECT'
      'mysql.db': 'SELECT'
      'mysql.tables_priv': 'SELECT'
      'mysql.columns_priv': 'SELECT'
      'mysql.procs_priv': 'SELECT'
      'mysql.proxies_priv': 'SELECT'
      'mysql.roles_mapping': 'SELECT'
      '*.*': 'SHOW DATABASES'
  no_log: True

- name: MAXSCALE_CLUSTER - Create maxscale monitor database user
  community.mysql.mysql_user:
    login_user: '{{ DBADMINUSER }}'
    login_password: '{{ DBADMINPASSWD }}'
    login_port: '{{ MARIADB_SERVER_PORT }}'
    name: '{{ MAXSCALE_MONITOR_USER }}'
    password: '{{ MAXSCALE_MONITOR_USER_PASSWORD }}'
    host: '%'
    state: present
    priv:
      '*.*': 'REPLICATION CLIENT, REPLICA MONITOR, FILE, CONNECTION ADMIN'
      '*.*': 'SUPER, RELOAD, PROCESS, SHOW DATABASES, EVENT, READ_ONLY ADMIN'
      'mysql.user': 'SELECT'
      'mysql.global_priv': 'SELECT'
      '*.*': 'REPLICATION SLAVE'
  no_log: True

- name: MAXSCALE_CLUSTER - Configure mariadb server in maxscale
  community.general.ini_file:
    path: /etc/maxscale.cnf.d/medulla_master.cnf
    section: '{{ item.section }}'
    option: '{{ item.parameter }}'
    value: '{{ item.value }}'
    backup: yes
  with_items:
    - { section: '{{ SERVER_FQDN.split(".")[0] }}', parameter: 'type', value: 'server' }
    - { section: '{{ SERVER_FQDN.split(".")[0] }}', parameter: 'address', value: '{{ SERVER_FQDN }}' }
    - { section: '{{ SERVER_FQDN.split(".")[0] }}', parameter: 'port', value: '{{ MARIADB_SERVER_PORT }}' }
    - { section: '{{ SERVER_FQDN.split(".")[0] }}', parameter: 'protocol', value: 'MariaDBBackend' }
    - { section: '{{ SERVER_FQDN.split(".")[0] }}', parameter: 'proxy_protocol', value: 'true' }
  notify:
    - MAXSCALE_CLUSTER - Restart maxscale
  delegate_to: '{{ MAXSCALE_FQDN }}'

- name: MAXSCALE_CLUSTER - Add mariadb server to MariaDB-Monitor
  ansible.builtin.command: 'crudini --set --list /etc/maxscale.cnf.d/medulla_master.cnf MariaDB-Monitor servers {{ SERVER_FQDN.split(".")[0] }}'
  notify:
    - MAXSCALE_CLUSTER - Restart maxscale
  delegate_to: '{{ MAXSCALE_FQDN }}'

- name: MAXSCALE_CLUSTER - Add mariadb server to Read-Only-Service
  ansible.builtin.command: 'crudini --set --list /etc/maxscale.cnf.d/medulla_master.cnf Read-Only-Service servers {{ SERVER_FQDN.split(".")[0] }}'
  notify:
    - MAXSCALE_CLUSTER - Restart maxscale
  delegate_to: '{{ MAXSCALE_FQDN }}'

- name: MAXSCALE_CLUSTER - Add mariadb server to Splitter-Service
  ansible.builtin.command: 'crudini --set --list /etc/maxscale.cnf.d/medulla_master.cnf Splitter-Service servers {{ SERVER_FQDN.split(".")[0] }}'
  notify:
    - MAXSCALE_CLUSTER - Restart maxscale
  delegate_to: '{{ MAXSCALE_FQDN }}'

- name: MAXSCALE_CLUSTER - Get allowed proxies from master db server
  ansible.builtin.command: grep -m1 -ir '^proxy-protocol-networks' {{ MARIADB_CONF_PATH }}/{{ SERVER_CONF_FILE }}
  register: grep_output
  delegate_to: '{{ MASTER_FQDN }}'

- name: MAXSCALE_CLUSTER - Define proxies_list
  ansible.builtin.set_fact:
    proxies_list: '{{ grep_output.stdout.split("=")[1] }}'

- name: MAXSCALE_CLUSTER - Allow proxied requests on mariadb servers from maxscale
  community.general.ini_file:
    path: '{{ MARIADB_CONF_PATH }}/{{ SERVER_CONF_FILE }}'
    section: mariadb
    option: proxy-protocol-networks
    value: "{{ proxies_list }}"
    backup: yes
  notify:
    - MAXSCALE_CLUSTER - Restart mariadb

- name: MAXSCALE_CLUSTER - Restart maxscale with the new parameters
  ansible.builtin.meta: flush_handlers
  delegate_to: '{{ MAXSCALE_FQDN }}'
