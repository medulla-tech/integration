PKI_PATH: /var/lib/pulse2/pki
PKI_SERVER: localhost
SERVER_FQDN: '{{ ansible_fqdn }}'
XMPP_DOMAIN: pulse
XMPP_MASTER_PASSWORD: '' # 12 character string. Must be vaulted
LDAP_DOMAIN: '{{ ansible_domain }}'
LDAP_BASEDN: 'dc={{ LDAP_DOMAIN.split(".") | join(",dc=")}}'
LDAPADMINPASSWD: '{{ ROOT_PASSWORD }}'
# For authenticating to external LDAP. Examples:
# EXTERNAL_LDAP_URL: ldap://ldap.siveo.local:389 
# EXTERNAL_LDAP_SUFFIX: OU=USERS,OU=AD,DC=siveo,DC=local
# EXTERNAL_LDAP_BINDNAME: CN=readonly,OU=SERVICE_ACCOUNTS,OU=AD,DC=siveo,DC=local
EXTERNAL_LDAP_URL: ''
EXTERNAL_LDAP_SUFFIX: ''
EXTERNAL_LDAP_BINDNAME: ''
EXTERNAL_LDAP_PASSWORD: ''
EXTERNAL_LDAP_USERATTR: sAMAccountName
INTERFACE: '{{ ansible_default_ipv4.interface }}'
IP_ADDRESS: "{{ vars['ansible_'~INTERFACE].ipv4.address }}"
NETMASK: "{{ vars['ansible_'~INTERFACE].ipv4.netmask }}"
# Define PUBLIC_IP if main pulse server also has a public relay. TODO: Maybe this needs to go in another task
PUBLIC_IP: ''
GUACAMOLE_ROOT_PASSWORD: '' # 40 character string. Must be vaulted
AES_KEY: '' # 32 character string. Must be vaulted
GRAFANA_ADMIN_KEY: '' # GRAFANA_ADMIN_KEY is generated by grafana role
STDISCOSRV_URL: '' # STDISCOSRV_URL is generated by syncthing_discosrv role
# For using database on another server, define DBHOST
DBHOST: localhost
DBHOST_IP: "{{ query('community.general.dig', DBHOST)[0] }}"
DBPORT: 3306
DB_SETUP_PORT: 4006 # Used when a maxscale cluster is used: 4006
DBUSER: mmc
DBPASSWORD: '' # 12 character string. Must be vaulted
DBADMINUSER: root
DBADMINPASSWD: '{{ ROOT_PASSWORD }}'
# For using GLPI/ITSM-NG on another server, redefine following ITSM_* variables. The following defaults are for local GLPI/ITSM-NG.
ITSM_TYPE: glpi # can be glpi or itsm-ng
ITSM_WRITEABLE: true
ITSM_DBHOST: localhost
ITSM_DBPORT: 3306
ITSM_DBNAME: glpi
ITSM_DBUSER: glpi
ITSM_DBPASSWD: '' # 12 character string. Must be vaulted
ITSM_BASEURL: 'http://{{ SERVER_FQDN }}/{{ ITSM_TYPE }}'
ITSM_API_USER: 'root'
ITSM_API_PASSWORD: '{{ ROOT_PASSWORD }}'
ITSM_DBADMINUSER: '{{ DBADMINUSER }}' # Must be defined when using separate ITSM database
ITSM_DBADMINPASSWD: '{{ DBADMINPASSWD }}' # Must be defined when using separate ITSM database
URBACKUP_API_SERVER: 127.0.0.1
URBACKUP_ADMINPASSWD: '{{ ROOT_PASSWORD }}'
URBACKUP_API_PASSWORD: '' # URBACKUP_API_PASSWORD comes from urbackup role
PYTHON_VERSION: 3
MASTER_TOKEN: '' # 32 character string. Must be vaulted
INITIALISE_DB: true
# For adding a OIDC provider the following section must be defined. Leaving OIDC_PROVIDER empty will not setup any OIDC provider
OIDC_PROVIDER: '' # Name given to the OIDC provider
OIDC_PROVIDER_LOGOURL: '' # Can be left empty for default logo
OIDC_PROVIDER_URL: ''
OIDC_PROVIDER_CLIENTID: ''
OIDC_PROVIDER_CLIENTSECRET: ''
OIDC_DEFAULT_ACL: 'base#main#default/'
URBACKUP_DISABLED: false
IMAGING_DISABLED: false
PULSEMAIN_IP: '' # PULSEMAIN_IP must be set for secondary servers of mmc cluster
SEND_WOL_FROM_MAIN: false
WOL_PORT: 9
LOADBALANCER_FQDN: '' # If Medulla is load balanced, FQDN of the load balancer
