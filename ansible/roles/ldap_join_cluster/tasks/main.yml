##########################################################
#                   Join LDAP cluster                    #
##########################################################

- name: Set version for this playbook
  ansible.builtin.set_fact:
    ROLE_VERSION: '1.0.0'

- name: Display version
  ansible.builtin.debug:
    msg:
    - "{{role_name}} version: {{ ROLE_VERSION }}"

- name: LDAP_CLUSTER - Add the OS specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"
  ignore_errors: true

- name: LDAP_CLUSTER - Check if .dbinitialised is present
  ansible.builtin.stat:
    path: /var/lib/ldap/.dbinitialised
  register: resdbinitialised

- name: LDAP_CLUSTER - Set DBREPL_INITIALISED if .dbinitialised is present
  ansible.builtin.set_fact:
    DBREPL_INITIALISED: True
  when:
    - resdbinitialised.stat.exists

- name: LDAP_CLUSTER - Get contents of cn=config.ldif file from main server
  ansible.builtin.slurp:
    src: '{{ SLAPD_D_PATH }}/cn=config.ldif'
  register: configldif
  vars:
    ansible_ssh_user: root
  delegate_to: '{{ PULSEMAIN_IP }}'

- name: LDAP_CLUSTER - Create a list of all olcServerID records from main server
  ansible.builtin.set_fact:
    CLUSTER_SERVERS_LIST: "{{ configldif['content'] | b64decode | regex_findall('olcServerID: ([0-9]+ .+)', multiline=True, ignorecase=True) }}"

- name: LDAP_CLUSTER - Get contents of local cn=config.ldif file
  ansible.builtin.slurp:
    src: '{{ SLAPD_D_PATH }}/cn=config.ldif'
  register: configldif

- name: LDAP_CLUSTER - Get local olcServerID
  ansible.builtin.set_fact:
    LOCAL_CLUSTER_SERVER: "{{ configldif['content'] | b64decode | regex_findall('olcServerID: ([0-9]+ .+)', multiline=True, ignorecase=True) }}"

- name: LDAP_CLUSTER - Define synch admin password
  ansible.builtin.command: slappasswd -s {{ LDAPSYNCHADMINPASSWD }}
  register: command_result

- name: LDAP_CLUSTER - Set LDAPSYNCHADMINPASSWD_ENCR for syncthing
  ansible.builtin.set_fact:
    LDAPSYNCHADMINPASSWD_ENCR: "{{ command_result.stdout }}"

- name: LDAP_CLUSTER - Append local olcServerID to CLUSTER_SERVERS_LIST
  ansible.builtin.set_fact:
    CLUSTER_SERVERS_LIST: "{{ CLUSTER_SERVERS_LIST + LOCAL_CLUSTER_SERVER }}"
  when:
    - DBREPL_INITIALISED is not defined

- name: LDAP_CLUSTER - Copy config_synch.ldif to /tmp on main server
  ansible.builtin.template:
    src: config_synch.ldif.j2
    dest: /tmp/config_synch.ldif
    mode: '0644'
  vars:
    ansible_ssh_user: root
  delegate_to: '{{ PULSEMAIN_IP }}'

- name: LDAP_CLUSTER - Enable replication of cn=config database on main server
  ansible.builtin.command: 'ldapmodify -c -Q -Y EXTERNAL -H ldapi:/// -f /tmp/config_synch.ldif'
  register: command_result
  failed_when:
    - (command_result.rc != 0) and (command_result.rc != 20) and (command_result.rc != 80)
  vars:
    ansible_ssh_user: root
  delegate_to: '{{ PULSEMAIN_IP }}'

- name: LDAP_CLUSTER - Copy config_synch.ldif to /tmp
  ansible.builtin.template:
    src: config_synch.ldif.j2
    dest: /tmp/config_synch.ldif
    mode: '0644'

- name: LDAP_CLUSTER - Enable replication of cn=config database
  ansible.builtin.command: 'ldapmodify -c -Q -Y EXTERNAL -H ldapi:/// -f /tmp/config_synch.ldif'
  register: command_result
  failed_when:
    - (command_result.rc != 0) and (command_result.rc != 20) and (command_result.rc != 80)

- name: LDAP_CLUSTER - Copy db_synch.ldif to /tmp on main server
  ansible.builtin.template:
    src: db_synch.ldif.j2
    dest: /tmp/db_synch.ldif
    mode: '0644'
  vars:
    ansible_ssh_user: root
  delegate_to: '{{ PULSEMAIN_IP }}'

- name: LDAP_CLUSTER - Enable replication of database on main server
  ansible.builtin.command: 'ldapmodify -c -Q -Y EXTERNAL -H ldapi:/// -f /tmp/db_synch.ldif'
  register: command_result
  failed_when:
    - (command_result.rc != 0) and (command_result.rc != 20) and (command_result.rc != 80)
  vars:
    ansible_ssh_user: root
  delegate_to: '{{ PULSEMAIN_IP }}'
  register: dbrepl_init

- name: LDAP_CLUSTER - Set marker for database replication initialisation
  ansible.builtin.file:
    path: /var/lib/ldap/.dbinitialised
    state: touch
  when:
    - dbrepl_init.changed | bool
