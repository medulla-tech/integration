---

##########################################################
#                         Version                        #
##########################################################

 - name: VERSION - Set version for this playbook
   set_fact:
     PLAYBOOK_VERSION: '1.1'

 - name: VERSION - Display version
   debug:
     msg:
     - "Pulse4Rollback Playbook Version: {{ PLAYBOOK_VERSION }}"
         
##########################################################
#                         Checks                         #
##########################################################

 - name: PRE-CHECKS - Check platform requierement
   fail:
     msg: The OS platform is outdated ( {{ ansible_distribution }} , {{ ansible_distribution_version }} )
   when: 
     - ansible_distribution == 'CentOS'
     - ansible_distribution_version < 7.6

##########################################################
#                    Compute variables                   #
##########################################################

 - name: VARS - Set XMPP_DOMAIN to ansible_hostname if not on pulsemain
   set_fact:
     XMPP_DOMAIN: "{{ ansible_hostname }}"
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: VARS - Set IP_ADDRESS if INTERFACE defined
   set_fact:
     IP_ADDRESS: "{{ vars['ansible_'~INTERFACE].ipv4.address }}"
   when:
     - INTERFACE != ''
   no_log: True

 - name: VARS - Set IP_ADDRESS if INTERFACE not defined
   set_fact:
     IP_ADDRESS: "{{ ansible_default_ipv4.address }}"
   when:
     - INTERFACE == ''
   no_log: True

##########################################################
#                     Install apache                     #
##########################################################

 - name: APACHE - Define APACHE_CONF_PATH for CentOS
   set_fact:
     APACHE_CONF_PATH: "/etc/httpd/conf.d"
   when:
     - ansible_distribution == 'CentOS'
   no_log: True

##########################################################
#                    Install syncthing                   #
##########################################################

 - name: SYNCTHING - Downgrade syncthing
   yum:
     update_cache: yes
     allow_downgrade: yes
     state: present
     pkg: syncthing-1.1.4
   when:
     - ansible_distribution == 'CentOS'
   no_log: True

 - name: SYNCTHING - Stop service for deleting any previous configuration
   systemd:
     name: syncthing@{{ item }}
     state: stopped
   with_items:
     - syncthing
     - syncthing-depl

 - name: SYNCTHING - Reset syncthing
   file:
     path: '{{ item }}'
     state: absent
   with_items:
     - '/var/lib/syncthing/.config'
     - '/var/lib/syncthing/Sync'
     - '/var/lib/syncthing-depl/.config'
     - '/var/lib/syncthing-depl/Sync'
   no_log: True

 - name: SYNCTHING - Create user accounts
   user:
     name: '{{ item.name }}'
     state: present
     createhome: yes
     home: '{{ item.home }}'
     shell: /sbin/nologin
     system: yes
   with_items:
     - { name: 'syncthing', home: '/var/lib/syncthing' }
     - { name: 'syncthing-depl', home: '/var/lib/syncthing-depl' }
   no_log: True

 - name: SYNCTHING - Create log file
   file:
     path: /var/log/syncthing.log
     mode: 0644
     owner: syncthing
     group: syncthing
     state: touch
   no_log: True

 - name: SYNCTHING - Separate syncthing logs
   lineinfile:
     dest: "/usr/lib/systemd/system/syncthing@.service"
     regexp: "{{ item.regex }}"
     line: "{{ item.line }}"
     insertafter: "{{ item.insertafter }}"
   with_items:
     - { regex: '^ExecStart=/usr/bin/syncthing .*$', line: 'ExecStart=/usr/bin/syncthing -no-browser -logflags=3 -logfile /var/log/syncthing.log', insertafter: '' }
     - { regex: '^StandardOutput=.*$', line: 'StandardOutput=null', insertafter: '^Restart=.*$' }
     - { regex: '^StandardError=.*$', line: 'StandardError=null', insertafter: 'StandardOutput=null' }
   no_log: True

 - name: SYNCTHING - Setup rotation of syncthing logs
   copy:
     content: |
       /var/log/syncthing.log
       {
           missingok
           daily
           rotate 7
           notifempty
           create 0644 syncthing syncthing
           compress
       }
     dest: '/etc/logrotate.d/syncthing'
   no_log: True

 - name: SYNCTHING - Enable services
   systemd:
     enabled: yes
     daemon_reload: yes
     state: restarted
     name: 'syncthing@{{ item }}.service'
   with_items:
     - syncthing
     - syncthing-depl
   no_log: True

 - name: SYNCTHING - Pause for up to 300 seconds to enable syncthing start
   wait_for:
     path: /var/lib/syncthing/.config/syncthing/config.xml
   no_log: True

 - name: SYNCTHING - Pause for up to 300 seconds to enable syncthing-depl start
   wait_for:
     path: /var/lib/syncthing-depl/.config/syncthing/config.xml
   no_log: True

 - name: SYNCTHING - Create backups of syncthing configure
   copy:
     src: '/var/lib/{{ item }}/.config/syncthing/config.xml'
     dest: '/var/lib/{{ item }}/.config/syncthing/config.xml.orig'
     remote_src: yes
   with_items:
     - syncthing
     - syncthing-depl
   no_log: True

 - name: SYNCTHING - Get local device id for syncthing
   command: syncthing -home=/var/lib/syncthing/.config/syncthing/ -device-id
   register: localdeviceid
   no_log: True

 - name: SYNCTHING - Set LOCAL_DEVICE_ID for syncthing
   set_fact:
     LOCAL_DEVICE_ID: "{{ localdeviceid.stdout }}"
   no_log: True

 - name: SYNCTHING - Setup local apache for syncthing
   copy:
     content: |
       ProxyPass /syncthing/ http://localhost:8384/
       <Location /syncthing/>
           ProxyPassReverse http://localhost:8384/
           Require all granted
       </Location>
     dest: '{{ APACHE_CONF_PATH }}/syncthing.conf'
   no_log: True

 - name: SYNCTHING - Reload apache
   systemd:
     name: httpd
     state: reloaded
   when:
     - ansible_distribution == 'CentOS'
   no_log: True

 - name: SYNCTHING - Setup pulsemain apache for relay syncthing
   copy:
     content: |
       ProxyPass /syncthing-{{ XMPP_DOMAIN }}/ http://{{ XMPP_DOMAIN }}/syncthing/
       <Location /syncthing-{{ XMPP_DOMAIN }}/>
           ProxyPassReverse http://{{ XMPP_DOMAIN }}/syncthing/
           Require all granted
       </Location>
     dest: '{{ APACHE_CONF_PATH }}/syncthing-{{ XMPP_DOMAIN }}.conf'
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Reload apache on pulsemain
   systemd:
     name: httpd
     state: reloaded
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - ansible_distribution == 'CentOS'
   no_log: True

 - name: SYNCTHING - Find pulsemain device id
   command: syncthing -home=/var/lib/syncthing/.config/syncthing/ -device-id
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   register: resid
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Set PULSEMAIN_DEVICE_ID
   set_fact:
     PULSEMAIN_DEVICE_ID: '{{ resid.stdout }}'
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Set DISCOSRV_DEVICE_ID to PULSEMAIN_DEVICE_ID on relay
   set_fact:
     DISCOSRV_DEVICE_ID: '{{ PULSEMAIN_DEVICE_ID }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Stop service for editing configuration
   systemd:
     name: syncthing@{{ item }}
     state: stopped
   with_items:
     - syncthing
     - syncthing-depl
   no_log: True

 - name: SYNCTHING - Stop service for editing configuration on pulsemain
   systemd:
     name: syncthing@{{ item }}
     state: stopped
   with_items:
     - syncthing
     - syncthing-depl
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Define global announce server as pulsemain on relay syncthing
   command: 'xmlstarlet ed --inplace -u "configuration/options/globalAnnounceServer" -v "https://{{ PULSEMAIN_FQDN }}:8443/?id={{ DISCOSRV_DEVICE_ID }}" /var/lib/syncthing/.config/syncthing/config.xml'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Update syncthing parameters to disallow external connections
   command: xmlstarlet ed --inplace -u "configuration/options/{{ item.field }}" -v "{{ item.value }}" /var/lib/syncthing/.config/syncthing/config.xml
   with_items:
     - { field: 'relaysEnabled', value: 'false' }
     - { field: 'localAnnounceEnabled', value: 'false' }
     - { field: 'urAccepted', value: '-1' }
     - { field: 'autoUpgradeIntervalH', value: '0' }
     - { field: 'stunKeepaliveSeconds', value: '0' }
   no_log: True

 - name: SYNCTHING - Add root user
   command: xmlstarlet ed --inplace -s "configuration/gui" -t elem -n user -v root /var/lib/syncthing/.config/syncthing/config.xml
   no_log: True

 - name: SYNCTHING - Generate Syncthing root user hash
   shell: "htpasswd -bnBC 10 '' {{ ROOT_PASSWORD }} | tr -d ':\n' | sed 's/$2y/$2a/'"
   register: syncthing_pass
   no_log: True

 - name: SYNCTHING - Define ENCRYPTED_PASS
   set_fact:
     ENCRYPTED_PASS: "{{ syncthing_pass.stdout }}"
   no_log: True

 - name: SYNCTHING - Set root password to ENCRYPTED_PASS
   command: xmlstarlet ed --inplace -s "configuration/gui" -t elem -n password -v {{ ENCRYPTED_PASS }} /var/lib/syncthing/.config/syncthing/config.xml
   no_log: True

 - name: SYNCTHING - Get api key from syncthing
   command: xmlstarlet sel -t -v "configuration/gui/apikey" /var/lib/syncthing/.config/syncthing/config.xml
   register: apikey

 - name: SYNCTHING - Set API_KEY
   set_fact:
     API_KEY: "{{ apikey.stdout }}"

 - name: SYNCTHING - Configure API_KEY in stman
   command: 'stman configure -k {{ API_KEY }}'

 - name: SYNCTHING - Define XMPP_DOMAIN for device name
   command: xmlstarlet ed --inplace -u "configuration/device[@id='{{ LOCAL_DEVICE_ID }}']/@name" -v "{{ XMPP_DOMAIN }}" /var/lib/syncthing/.config/syncthing/config.xml
   no_log: True

 - name: SYNCTHING - Delete the default share
   command: xmlstarlet ed --inplace -d "configuration/folder[@label='Default Folder']" /var/lib/syncthing/.config/syncthing/config.xml
   no_log: True

 - name: SYNCTHING - Delete pulsemain device on relay syncthing
   command: xmlstarlet ed --inplace -d "configuration/device[@id='{{ PULSEMAIN_DEVICE_ID }}']" /var/lib/syncthing/.config/syncthing/config.xml
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Add pulsemain device as introducer on relay syncthing
   command: xmlstarlet ed --inplace -s "configuration" -t elem -n "device id='{{ PULSEMAIN_DEVICE_ID }}' name='pulse' introducer='true'" /var/lib/syncthing/.config/syncthing/config.xml
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Edit pulsemain device on relay syncthing
   command: xmlstarlet ed --inplace -s "configuration/device[@id='{{ PULSEMAIN_DEVICE_ID }}']" -t elem -n "{{ item.field }}" -v "{{ item.value }}" /var/lib/syncthing/.config/syncthing/config.xml
   with_items:
     - { field: 'autoAcceptFolders', value: 'false' }
     - { field: 'address', value: 'tcp://{{ PULSEMAIN_IP }}:22000' }
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Delete relayserver device from pulsemain syncthing
   command: xmlstarlet ed --inplace -d "configuration/device[@name='{{ XMPP_DOMAIN }}']" /var/lib/syncthing/.config/syncthing/config.xml
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   ignore_errors: yes
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Add relayserver device to pulsemain syncthing
   command: xmlstarlet ed --inplace -s "configuration" -t elem -n "device id='{{ LOCAL_DEVICE_ID }}' name='{{ XMPP_DOMAIN }}' introducer='false'" /var/lib/syncthing/.config/syncthing/config.xml
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Edit relayserver device on pulsemain syncthing
   command: xmlstarlet ed --inplace -s "configuration/device[@id='{{ LOCAL_DEVICE_ID }}']" -t elem -n "{{ item.field }}" -v "{{ item.value }}" /var/lib/syncthing/.config/syncthing/config.xml
   with_items:
     - { field: 'address', value: 'tcp://{{ IP_ADDRESS }}:22000' }
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Restart service after editing configuration on pulsemain
   systemd:
     name: syncthing@syncthing
     state: restarted
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Restart service after editing configuration
   systemd:
     name: syncthing@syncthing
     state: restarted
   no_log: True

 - name: SYNCTHING - Pause for 5 to 300 seconds to enable syncthing start
   wait_for:
     port: 22000
     delay: 5
   no_log: True


##########################################################
#               Syncthing share packages                 #
##########################################################

 - name: SHARE - Stop service for editing configuration
   systemd:
     name: syncthing@{{ item }}
     state: stopped
   with_items:
     - syncthing
     - syncthing-depl
   no_log: True

 - name: SHARE - Stop service on pulsemain for editing configuration
   systemd:
     name: syncthing@{{ item }}
     state: stopped
   with_items:
     - syncthing
     - syncthing-depl
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Get information about packages folder
   stat:
     path: /var/lib/pulse2/packages
   register: packagesfolder

 - name: SHARE - Delete packages folder if it is not a link
   file:
     state: absent
     path: /var/lib/pulse2/packages
   when: packagesfolder.stat is defined and packagesfolder.stat.islnk is not defined
   no_log: True

 - name: SHARE - Create symbolic link in /var/lib/pulse2/packages
   file:
     src: /telediffusion/4
     dest: /var/lib/pulse2/packages
     owner: syncthing
     group: syncthing
     state: link
     force: yes
   no_log: True

 - name: SHARE - Create folder named after the UCANSS number on pulsemain
   file:
     path: '/var/lib/pulse2/packages/sharing/{{ ansible_hostname[:6] }}/'
     state: directory
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Check if UCANSS share exists on pulsemain syncthing
   command: xmlstarlet sel -t -v "/configuration/folder[@id=\"pulsemaster_{{ ansible_hostname[:6] }}\"]/@id" -n /var/lib/syncthing/.config/syncthing/config.xml
   register: syncthingshareexists
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Create UCANSS share on pulsemain if it did not exist
   command: xmlstarlet ed --inplace -s "configuration" -t elem -n 'folder id="pulsemaster_{{ ansible_hostname[:6] }}" label="{{ ansible_hostname[:6] }}" path="/var/lib/pulse2/packages/sharing/{{ ansible_hostname[:6] }}" type="sendonly" rescanIntervalS="3600" fsWatcherEnabled="true" fsWatcherDelayS="10" autoNormalize="true"' /var/lib/syncthing/.config/syncthing/config.xml
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
     - syncthingshareexists.stdout == ''
   no_log: True

 - name: SHARE - Edit UCANSS share on pulsemain if it did not exist
   command: xmlstarlet ed --inplace {{ item.type }} "{{ item.element }}" {{ item.operation }} /var/lib/syncthing/.config/syncthing/config.xml
   with_items:
     - { type: "-s", element: "configuration/folder[@id='pulsemaster_{{ ansible_hostname[:6] }}']", operation: "-t elem -n 'device id=\"{{ PULSEMAIN_DEVICE_ID }}\"'" }
     - { type: "-s", element: "configuration/folder[@id='pulsemaster_{{ ansible_hostname[:6] }}']", operation: "-t elem -n 'markerName' -v '.stfolder'" }
     - { type: "-s", element: "configuration/folder[@id='pulsemaster_{{ ansible_hostname[:6] }}']", operation: "-t elem -n 'minDiskFree unit=\"%\"'" }
     - { type: "-u", element: "configuration/folder[@id='pulsemaster_{{ ansible_hostname[:6] }}']/minDiskFree", operation: "-v '1'" }
   when:
     - INSTALL_TYPE != 'p'
     - syncthingshareexists.stdout == ''
   no_log: True

 - name: SHARE - Delete all shares on ars
   command: xmlstarlet ed --inplace -d "configuration/folder[@id='{{ item.share_id }}']" /var/lib/syncthing/.config/syncthing/config.xml
   with_items:
     - { share_id: 'pulsemaster_packages', syncthing_folder: 'packages', destination: '/telediffusion/4/' }
     - { share_id: 'pulsemaster_downloads', syncthing_folder: 'downloads', destination: '/var/lib/pulse2/clients/' }
     - { share_id: 'pulsemaster_bootmenus', syncthing_folder: 'bootmenus', destination: '/var/lib/pulse2/imaging/bootmenus/' }
     - { share_id: 'pulsemaster_baseremoteagent', syncthing_folder: 'baseremoteagent', destination: '/var/lib/pulse2/xmpp_baseremoteagent/' }
     - { share_id: 'pulsemaster_global', syncthing_folder: 'global', destination: '/var/lib/pulse2/packages/sharing/global/' }
     - { share_id: 'pulsemaster_{{ ansible_hostname[:6] }}', syncthing_folder: '{{ ansible_hostname[:6] }}', destination: '/var/lib/pulse2/packages/sharing/{{ ansible_hostname[:6] }}/' }
   ignore_errors: yes
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Unshare all folders from main pulse if already shared
   command: xmlstarlet ed --inplace -d "configuration/folder[@type='sendonly']/device[@id='{{ LOCAL_DEVICE_ID }}']" /var/lib/syncthing/.config/syncthing/config.xml
   ignore_errors: yes
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Remove destination folders if present
   file:
     path: '{{ item.destination }}'
     state: absent
   with_items:
     - { share_id: 'pulsemaster_packages', syncthing_folder: 'packages', destination: '/telediffusion/4/' }
     - { share_id: 'pulsemaster_downloads', syncthing_folder: 'downloads', destination: '/var/lib/pulse2/clients/' }
     - { share_id: 'pulsemaster_bootmenus', syncthing_folder: 'bootmenus', destination: '/var/lib/pulse2/imaging/bootmenus/' }
     - { share_id: 'pulsemaster_baseremoteagent', syncthing_folder: 'baseremoteagent', destination: '/var/lib/pulse2/xmpp_baseremoteagent/' }
     - { share_id: 'pulsemaster_global', syncthing_folder: 'global', destination: '/var/lib/pulse2/packages/sharing/global/' }
     - { share_id: 'pulsemaster_{{ ansible_hostname[:6] }}', syncthing_folder: '{{ ansible_hostname[:6] }}', destination: '/var/lib/pulse2/packages/sharing/{{ ansible_hostname[:6] }}/' }
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: Capture folders to delete in syncthing on relays
   find:
     paths: /var/lib/syncthing/
     file_type: directory
     patterns: '/var/lib/syncthing/\d{6}$'
     use_regex: yes
   register: folderstodelete
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: Delete folders in syncthing on relays
   file:
     path: "{{ item.path }}"
     state: absent
   with_items: "{{ folderstodelete['files'] }}"
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Delete unused shares on ars
   command: xmlstarlet ed --inplace -d "configuration/folder[@destination='{{ item.path | replace('/var/lib/syncthing', '~') }}']" /var/lib/syncthing/.config/syncthing/config.xml
   with_items: "{{ folderstodelete['files'] }}"
   ignore_errors: yes
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Create destination folders
   file:
     path: '{{ item.destination }}'
     state: directory
   with_items:
     - { share_id: 'pulsemaster_packages', syncthing_folder: 'packages', destination: '/telediffusion/4/' }
     - { share_id: 'pulsemaster_downloads', syncthing_folder: 'downloads', destination: '/var/lib/pulse2/clients/' }
     - { share_id: 'pulsemaster_bootmenus', syncthing_folder: 'bootmenus', destination: '/var/lib/pulse2/imaging/bootmenus/' }
     - { share_id: 'pulsemaster_baseremoteagent', syncthing_folder: 'baseremoteagent', destination: '/var/lib/pulse2/xmpp_baseremoteagent/' }
     - { share_id: 'pulsemaster_global', syncthing_folder: 'global', destination: '/var/lib/pulse2/packages/sharing/global/' }
     - { share_id: 'pulsemaster_{{ ansible_hostname[:6] }}', syncthing_folder: '{{ ansible_hostname[:6] }}', destination: '/var/lib/pulse2/packages/sharing/{{ ansible_hostname[:6] }}/' }
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Create syncthing special folder
   file:
     path: '{{ item.destination }}/.stfolder/'
     state: directory
     mode: '0755'
     owner: syncthing
     group: syncthing
   with_items:
     - { share_id: 'pulsemaster_downloads', syncthing_folder: 'downloads', destination: '/var/lib/pulse2/clients/' }
     - { share_id: 'pulsemaster_bootmenus', syncthing_folder: 'bootmenus', destination: '/var/lib/pulse2/imaging/bootmenus/' }
     - { share_id: 'pulsemaster_baseremoteagent', syncthing_folder: 'baseremoteagent', destination: '/var/lib/pulse2/xmpp_baseremoteagent/' }
     - { share_id: 'pulsemaster_global', syncthing_folder: 'global', destination: '/var/lib/pulse2/packages/sharing/global/' }
     - { share_id: 'pulsemaster_{{ ansible_hostname[:6] }}', syncthing_folder: '{{ ansible_hostname[:6] }}', destination: '/var/lib/pulse2/packages/sharing/{{ ansible_hostname[:6] }}/' }
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Create stignore file for downloads on relay
   copy:
     content: "reversessh"
     dest: /var/lib/pulse2/clients/.stignore
     mode: '0644'
     owner: syncthing
     group: syncthing
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Define ACLs on the folders with inheritance
   acl:
     path: '{{ item.destination }}'
     etype: group
     entity: syncthing
     recursive: yes
     permissions: rwx
     default: yes
     state: present
   with_items:
     - { share_id: 'pulsemaster_downloads', syncthing_folder: 'downloads', destination: '/var/lib/pulse2/clients/' }
     - { share_id: 'pulsemaster_bootmenus', syncthing_folder: 'bootmenus', destination: '/var/lib/pulse2/imaging/bootmenus/' }
     - { share_id: 'pulsemaster_baseremoteagent', syncthing_folder: 'baseremoteagent', destination: '/var/lib/pulse2/xmpp_baseremoteagent/' }
     - { share_id: 'pulsemaster_global', syncthing_folder: 'global', destination: '/var/lib/pulse2/packages/sharing/global/' }
     - { share_id: 'pulsemaster_{{ ansible_hostname[:6] }}', syncthing_folder: '{{ ansible_hostname[:6] }}', destination: '/var/lib/pulse2/packages/sharing/{{ ansible_hostname[:6] }}/' }
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Define ACLs on the folders
   acl:
     path: '{{ item.destination }}'
     etype: group
     entity: syncthing
     recursive: yes
     permissions: rwx
     default: no
     state: present
   with_items:
     - { share_id: 'pulsemaster_downloads', syncthing_folder: 'downloads', destination: '/var/lib/pulse2/clients/' }
     - { share_id: 'pulsemaster_bootmenus', syncthing_folder: 'bootmenus', destination: '/var/lib/pulse2/imaging/bootmenus/' }
     - { share_id: 'pulsemaster_baseremoteagent', syncthing_folder: 'baseremoteagent', destination: '/var/lib/pulse2/xmpp_baseremoteagent/' }
     - { share_id: 'pulsemaster_global', syncthing_folder: 'global', destination: '/var/lib/pulse2/packages/sharing/global/' }
     - { share_id: 'pulsemaster_{{ ansible_hostname[:6] }}', syncthing_folder: '{{ ansible_hostname[:6] }}', destination: '/var/lib/pulse2/packages/sharing/{{ ansible_hostname[:6] }}/' }
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Create shares on relay
   command: xmlstarlet ed --inplace -s "configuration" -t elem -n 'folder id="{{ item.share_id }}" label="{{ item.syncthing_folder }}" path="{{ item.destination }}" type="sendreceive" rescanIntervalS="3600" fsWatcherEnabled="true" fsWatcherDelayS="10" autoNormalize="true"' /var/lib/syncthing/.config/syncthing/config.xml
   with_items:
     - { share_id: 'pulsemaster_downloads', syncthing_folder: 'downloads', destination: '/var/lib/pulse2/clients/' }
     - { share_id: 'pulsemaster_bootmenus', syncthing_folder: 'bootmenus', destination: '/var/lib/pulse2/imaging/bootmenus/' }
     - { share_id: 'pulsemaster_baseremoteagent', syncthing_folder: 'baseremoteagent', destination: '/var/lib/pulse2/xmpp_baseremoteagent/' }
     - { share_id: 'pulsemaster_global', syncthing_folder: 'global', destination: '/var/lib/pulse2/packages/sharing/global/' }
     - { share_id: 'pulsemaster_{{ ansible_hostname[:6] }}', syncthing_folder: '{{ ansible_hostname[:6] }}', destination: '/var/lib/pulse2/packages/sharing/{{ ansible_hostname[:6] }}/' }
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Edit shares on relay
   command: xmlstarlet ed --inplace {{ item.type }} "{{ item.element }}" {{ item.operation }} /var/lib/syncthing/.config/syncthing/config.xml
   with_items:
     - { type: "-s", element: "configuration/folder[@type='sendreceive']", operation: "-t elem -n 'device id=\"{{ PULSEMAIN_DEVICE_ID }}\"'" }
     - { type: "-s", element: "configuration/folder[@type='sendreceive']", operation: "-t elem -n 'device id=\"{{ LOCAL_DEVICE_ID }}\"'" }
     - { type: "-s", element: "configuration/folder[@type='sendreceive']", operation: "-t elem -n 'markerName' -v '.stfolder'" }
     - { type: "-s", element: "configuration/folder[@type='sendreceive']", operation: "-t elem -n 'minDiskFree unit=\"%\"'" }
     - { type: "-u", element: "configuration/folder[@type='sendreceive']/minDiskFree", operation: "-v '1'" }
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Share all folders with ars from pulsemain
   command: xmlstarlet ed --inplace -s "configuration/folder[@id='{{ item.share_id }}']" -t elem -n 'device id="{{ LOCAL_DEVICE_ID }}"' /var/lib/syncthing/.config/syncthing/config.xml
   with_items:
     - { share_id: 'pulsemaster_downloads', syncthing_folder: 'downloads', destination: '/var/lib/pulse2/clients/' }
     - { share_id: 'pulsemaster_bootmenus', syncthing_folder: 'bootmenus', destination: '/var/lib/pulse2/imaging/bootmenus/' }
     - { share_id: 'pulsemaster_baseremoteagent', syncthing_folder: 'baseremoteagent', destination: '/var/lib/pulse2/xmpp_baseremoteagent/' }
     - { share_id: 'pulsemaster_global', syncthing_folder: 'global', destination: '/var/lib/pulse2/packages/sharing/global/' }
     - { share_id: 'pulsemaster_{{ ansible_hostname[:6] }}', syncthing_folder: '{{ ansible_hostname[:6] }}', destination: '/var/lib/pulse2/packages/sharing/{{ ansible_hostname[:6] }}/' }
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Restart service on pulsemain after editing configuration
   systemd:
     name: syncthing@{{ item }}
     state: restarted
   with_items:
     - syncthing
     - syncthing-depl
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SHARE - Restart service after editing configuration
   systemd:
     name: syncthing@{{ item }}
     state: restarted
   with_items:
     - syncthing
     - syncthing-depl
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Pause for 5 to 300 seconds to enable syncthing start
   wait_for:
     port: 22000
     delay: 5
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

##########################################################
#                 Syncthing deployment                   #
##########################################################

 - name: SYNCTHINGDEPL - Get local device id for syncthing-depl
   command: syncthing -home=/var/lib/syncthing-depl/.config/syncthing/ -device-id
   register: localdeviceid
   no_log: True

 - name: SYNCTHINGDEPL - Set LOCAL_DEVICE_ID for syncthing-depl
   set_fact:
     LOCAL_DEVICE_ID: "{{ localdeviceid.stdout }}"
   no_log: True

 - name: SYNCTHINGDEPL - Setup local apache for syncthing-depl
   copy:
     content: |
       ProxyPass /syncthing-depl/ http://localhost:8385/
       <Location /syncthing-depl/>
           ProxyPassReverse http://localhost:8385/
           Require all granted
       </Location>
     dest: '{{ APACHE_CONF_PATH }}/syncthing-depl.conf'
   no_log: True

 - name: SYNCTHINGDEPL - Reload apache
   systemd:
     name: httpd
     state: reloaded
   when:
     - ansible_distribution == 'CentOS'
   no_log: True

 - name: SYNCTHINGDEPL - Setup pulsemain apache for relay syncthing-depl
   copy:
     content: |
       ProxyPass /syncthing-depl-{{ XMPP_DOMAIN }}/ http://{{ XMPP_DOMAIN }}/syncthing-depl/
       <Location /syncthing-depl-{{ XMPP_DOMAIN }}/>
           ProxyPassReverse http://{{ XMPP_DOMAIN }}/syncthing-depl/
           Require all granted
       </Location>
     dest: '{{ APACHE_CONF_PATH }}/syncthing-depl-{{ XMPP_DOMAIN }}.conf'
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHINGDEPL - Reload apache on pulsemain
   systemd:
     name: httpd
     state: reloaded
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - ansible_distribution == 'CentOS'
   no_log: True

 - name: SYNCTHINGDEPL - Find pulsemain device id
   command: syncthing -home=/var/lib/syncthing-depl/.config/syncthing/ -device-id
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   register: resid
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHINGDEPL - Set PULSEMAIN_DEVICE_ID
   set_fact:
     PULSEMAIN_DEVICE_ID: '{{ resid.stdout }}'
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHINGDEPL - Stop service for editing configuration
   systemd:
     name: syncthing@{{ item }}
     state: stopped
   with_items:
     - syncthing
     - syncthing-depl
   no_log: True

 - name: SYNCTHINGDEPL - Stop service for editing configuration on pulsemain
   systemd:
     name: syncthing@{{ item }}
     state: stopped
   with_items:
     - syncthing
     - syncthing-depl
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHINGDEPL - Define global announce server as pulsemain on relay syncthing-depl
   command: 'xmlstarlet ed --inplace -u "configuration/options/globalAnnounceServer" -v "https://{{ PULSEMAIN_FQDN }}:8443/?id={{ DISCOSRV_DEVICE_ID }}" /var/lib/syncthing-depl/.config/syncthing/config.xml'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHINGDEPL - Update syncthing parameters to disallow external connections
   command: xmlstarlet ed --inplace -u "configuration/options/{{ item.field }}" -v "{{ item.value }}" /var/lib/syncthing-depl/.config/syncthing/config.xml
   with_items:
     - { field: 'relaysEnabled', value: 'false' }
     - { field: 'localAnnounceEnabled', value: 'false' }
     - { field: 'urAccepted', value: '-1' }
     - { field: 'autoUpgradeIntervalH', value: '0' }
   no_log: True

 - name: SYNCTHINGDEPL - Add root user
   command: 'xmlstarlet ed --inplace -s "configuration/gui" -t elem -n user -v root /var/lib/syncthing-depl/.config/syncthing/config.xml'
   no_log: True

 - name: SYNCTHINGDEPL - Set root password to ENCRYPTED_PASS
   command: xmlstarlet ed --inplace -s "configuration/gui" -t elem -n password -v {{ ENCRYPTED_PASS }} /var/lib/syncthing-depl/.config/syncthing/config.xml
   no_log: True

 - name: SYNCTHINGDEPL - Define listen port to 23000
   command: 'xmlstarlet ed --inplace -u "configuration/options/listenAddress" -v "tcp://0.0.0.0:23000" /var/lib/syncthing-depl/.config/syncthing/config.xml'
   no_log: True

 - name: SYNCTHINGDEPL - Define gui listen port to 8385
   command: 'xmlstarlet ed --inplace -u "configuration/gui/address" -v "127.0.0.1:8385" /var/lib/syncthing-depl/.config/syncthing/config.xml'
   no_log: True

 - name: SYNCTHINGDEPL - Get api key from syncthing-depl
   command: xmlstarlet sel -t -v "configuration/gui/apikey" /var/lib/syncthing-depl/.config/syncthing/config.xml
   register: apikey
   no_log: True

 - name: SYNCTHINGDEPL - Set API_KEY
   set_fact:
     API_KEY: "{{ apikey.stdout }}"
   no_log: True

 - name: SYNCTHINGDEPL - Configure API_KEY in stman
   command: "stman configure -k {{ API_KEY }} -p 8385 -n depl"

 - name: SYNCTHINGDEPL - Define XMPP_DOMAIN for device name
   command: xmlstarlet ed --inplace -u "configuration/device[@id='{{ LOCAL_DEVICE_ID }}']/@name" -v "{{ XMPP_DOMAIN }}" /var/lib/syncthing-depl/.config/syncthing/config.xml
   no_log: True

 - name: SYNCTHINGDEPL - Delete the default share
   command: xmlstarlet ed --inplace -d "configuration/folder[@label='Default Folder']" /var/lib/syncthing-depl/.config/syncthing/config.xml
   no_log: True

 - name: SYNCTHING - Delete relayserver device on pulsemain syncthing-depl
   command: xmlstarlet ed --inplace -d "configuration/device[@id='{{ LOCAL_DEVICE_ID }}']" /var/lib/syncthing-depl/.config/syncthing/config.xml
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHINGDEPL - Add relayserver device as introducer on pulsemain syncthing-depl
   command: xmlstarlet ed --inplace -s "configuration" -t elem -n "device id='{{ LOCAL_DEVICE_ID }}' name='{{ XMPP_DOMAIN }}' introducer='true'" /var/lib/syncthing-depl/.config/syncthing/config.xml
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHINGDEPL - Edit relayserver device on pulsemain syncthing-depl
   command: xmlstarlet ed --inplace -s "configuration/device[@id='{{ LOCAL_DEVICE_ID }}']" -t elem -n "{{ item.field }}" -v "{{ item.value }}" /var/lib/syncthing-depl/.config/syncthing/config.xml
   with_items:
     - { field: 'address', value: 'tcp://{{ IP_ADDRESS }}:23000' }
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHING - Delete pulsemain device on relay syncthing-depl
   command: xmlstarlet ed --inplace -d "configuration/device[@id='{{ PULSEMAIN_DEVICE_ID }}']" /var/lib/syncthing-depl/.config/syncthing/config.xml
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHINGDEPL - Add pulsemain device as introducer on relay syncthing-depl
   command: xmlstarlet ed --inplace -s "configuration" -t elem -n "device id='{{ PULSEMAIN_DEVICE_ID }}' name='pulse' introducer='true'" /var/lib/syncthing-depl/.config/syncthing/config.xml
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHINGDEPL - Edit pulsemain device on relay syncthing-depl
   command: xmlstarlet ed --inplace -s "configuration/device[@id='{{ PULSEMAIN_DEVICE_ID }}']" -t elem -n "{{ item.field }}" -v "{{ item.value }}" /var/lib/syncthing-depl/.config/syncthing/config.xml
   with_items:
     - { field: 'autoAcceptFolders', value: 'true' }
     - { field: 'address', value: 'tcp://{{ PULSEMAIN_IP }}:23000' }
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHINGDEPL - Restart service after editing configuration on pulsemain
   systemd:
     name: syncthing@{{ item }}
     state: restarted
   with_items:
     - syncthing
     - syncthing-depl
   vars:
     ansible_ssh_user: root
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != 'p'
   no_log: True

 - name: SYNCTHINGDEPL - Restart service after editing configuration
   systemd:
     name: syncthing@{{ item }}
     state: restarted
   with_items:
     - syncthing
     - syncthing-depl
   no_log: True

 - name: SYNCTHINGDEPL - Pause for 5 to 300 seconds to enable syncthing start
   wait_for:
     port: 23000
     delay: 5
   no_log: True

 - name: SYNCTHINGDEPL - Update relay config with apikey and device id
   command: crudini --set /etc/pulse-xmpp-agent/relayconf.ini.local syncthing-deploy {{ item.parameter }} {{ item.value }}
   with_items:
     - { parameter: 'syncthing_gui_apikey', value: '"{{ API_KEY }}"'}
     - { parameter: 'syncthing_device_id', value: '"{{ LOCAL_DEVICE_ID }}"'}
   no_log: True
